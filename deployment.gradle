/**
 * Artifact
 */
group = project.groupId
description = project.artifactDescription
version = project.artifactVersion

/**
 * Testing
 */
test {
	useJUnitPlatform {
		includeTags 'unittest'
		excludeTags 'integration'
	}
}

/**
 * Sources - build a jar with source files
 */
task sourcesJar(type: Jar, dependsOn: classes, description: 'Builds the sourcesJar.', group: 'build') {
	from sourceSets.main.allSource
	baseName = baseName.toLowerCase()
	classifier = 'sources'
}

/**
 * Artifacts
 */
artifacts {
	archives sourcesJar
}

/**
 * Deployment
 */
def pomConfig = {
	licenses {
		license {
			name "MIT License"
			url "https://opensource.org/licenses/MIT"
			distribution "repo"
		}
	}
	developers {
		developer {
			id "PhilippHeuer"
			name "Philipp Heuer"
			email "git@philippheuer.me"
		}
	}

	scm {
		url project.vcsUrl
	}
}
publishing {
	publications {
		mainProject(MavenPublication) {
			from project.components.java
			artifact sourcesJar
			groupId project.group
			artifactId String.valueOf(project.artifactName).toLowerCase()
			version project.version
			pom.withXml {
				def root = asNode()
				root.appendNode('description', project.artifactDescription)
				root.appendNode('name', String.valueOf(project.artifactName))
				root.appendNode('url', String.valueOf(project.websiteUrl))
				root.children().last() + pomConfig
			}
		}
	}
}

/**
 * Bintray Upload
 */
bintray {
	user = System.getenv("BINTRAY_USER")
	key = System.getenv("BINTRAY_API_KEY")
	publications = ['mainProject']
	dryRun = false
	pkg {
		// jcenter repository namespace and name
		userOrg = String.valueOf(project.artifactNamespace).toLowerCase()
		repo = 'maven'
		name = String.valueOf(project.artifactName).toLowerCase()
		desc = project.description
		licenses = ['MIT']
		websiteUrl = project.websiteUrl
		issueTrackerUrl = project.issueTrackerUrl
		vcsUrl = project.vcsUrl
		labels = []
		publicDownloadNumbers = true
		version {
			name = project.version
			vcsTag = project.version
			released = new Date()
		}
	}
}
